# (Save this file to .github/workflows/duplicate-prs-apply-rules.yml in your repo)
on:
  workflow_dispatch:
    inputs:
      actor:
        description: 'PR author login to process (default: the user who triggers the workflow)'
        required: false
        default: '${{ github.actor }}'
      hours:
        description: 'Look for PRs closed within the last N hours (ignored if pr_numbers provided)'
        required: false
        default: '2'
      pr_numbers:
        description: 'Optional comma-separated list of PR numbers to process (overrides automatic detection)'
        required: false
        default: ''
permissions:
  contents: write
  pull-requests: write
  issues: write

name: Duplicate closed PRs and apply updated rules

jobs:
  duplicate-and-verify:
    runs-on: ubuntu-latest
    environment: github-actions
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jq (used for JSON processing)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Determine PRs to process
        id: list_prs
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const actorInput = (process.env.INPUT_ACTOR && process.env.INPUT_ACTOR !== '') ? process.env.INPUT_ACTOR : context.actor;
            const hours = parseInt(process.env.INPUT_HOURS || '2', 10);
            const prNumbersInput = process.env.INPUT_PR_NUMBERS || '';
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const prs = [];

            if (prNumbersInput && prNumbersInput.trim() !== '') {
              const nums = prNumbersInput.split(',').map(s => s.trim()).filter(Boolean);
              for (const n of nums) {
                const pr = await github.rest.pulls.get({ owner, repo, pull_number: parseInt(n, 10) });
                prs.push(pr.data);
              }
            } else {
              // list up to 100 closed PRs and filter
              const res = await github.rest.pulls.list({ owner, repo, state: 'closed', per_page: 100 });
              const cutoff = Date.now() - (hours *
